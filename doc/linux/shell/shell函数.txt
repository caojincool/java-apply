-----------------------------shell函数----------------------------
shell自定义函数语法:
[ function ] funname [()]
{
    action;
    [return int;]
}

说明：
1、可以带function funname()定义，也可以直接funname() 定义,不带任何参数。
2、函数返回，可以显示加：return x 返回，如果不加，将以最后一条命令运行结果，作为返回值。return后跟数值n(0-255)

ep:
#!/bin/bash
function sum()
{
     echo $1,$2
     #此处只是举例输出两数之和，正常情况下不能这样弄，因为函数只能返回0-255的值
     #两数之和超过255，此处函数返回的值就不是两数之和。
     #对于这种两数之和在函数中处理后的结果值一般存放在外部变量中来保存结果
     return $(($1+$2))
}
sum 3 2
#total=$(fSum 3 2);total获取不到结果
total=$?
echo $total

#变量作用范围的例子
#!/bin/sh
declare num=1000;
jiajia()
{
  echo "do jiajia";
  ((num++));
  return 100;
}
innerjia()
{
  local num=10;
  ((num++));
  #返回11
  echo $num;
}
jiajia;
echo $?      #返回100
echo $num;   #返回1001
innerjia;
echo $num;   #返回1001

注意:
1,必须在调用函数地方之前，声明函数，shell脚本是逐行运行。
2,函数返回值，只能通过$? 变量获得，直接通过=,获得是空值。函数是一个命令，在shell获得命令返回值，都需要通过$?获得。
3,如果需要传出其它类型函数值，可以在函数调用之前，定义变量（这个就是全局变量）。在函数内部就可以直接修改，然后在执行完函数后就可以读取经过函数处理过后的值。
4,如果需要在函数中定义内部变量，用local 变量=值,它的修改，不会影响函数外部相同变量的值。
------------------------------------------------------------------