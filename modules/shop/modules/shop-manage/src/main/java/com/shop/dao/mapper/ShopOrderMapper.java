package com.shop.dao.mapper;

import com.shop.model.pojo.ShopOrder;
import com.shop.model.pojo.ShopOrderExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface ShopOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int countByExample(ShopOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int deleteByExample(ShopOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    @Delete({
        "delete from shop_order",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    @Insert({
        "insert into shop_order (order_no, from_source, ",
        "statu, user_id, user_name, ",
        "user_mobile, user_comment, ",
        "shop_id, shop_name, ",
        "shop_comment, is_overbuy, ",
        "is_cancel, cancel_time, ",
        "cancel_note, price_amount, ",
        "postage, exchange_score, ",
        "exchange_cash, coupon_no, ",
        "coupon_price, discount_id, ",
        "discount_type, discount_desc, ",
        "discount_rule, discount_price, ",
        "pay_state, pay_time, ",
        "pay_account, trade_no, ",
        "pay_channel, pay_id, ",
        "receiver_province_id, receiver_province_name, ",
        "receiver_city_id, receiver_city_name, ",
        "receiver_area_id, receiver_area_name, ",
        "receiver_address, receiver_name, ",
        "receiver_mobile, receiver_address_id, ",
        "is_receive, receive_time, ",
        "deliver_time, deliver_time_limit, ",
        "remind_deliver_count, is_delive, ",
        "is_delive_timeout, express_id, ",
        "express_name, express_no, ",
        "create_time, modified_time, ",
        "modifier_id)",
        "values (#{orderNo,jdbcType=VARCHAR}, #{fromSource,jdbcType=INTEGER}, ",
        "#{statu,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, ",
        "#{userMobile,jdbcType=VARCHAR}, #{userComment,jdbcType=VARCHAR}, ",
        "#{shopId,jdbcType=BIGINT}, #{shopName,jdbcType=VARCHAR}, ",
        "#{shopComment,jdbcType=VARCHAR}, #{isOverbuy,jdbcType=INTEGER}, ",
        "#{isCancel,jdbcType=INTEGER}, #{cancelTime,jdbcType=TIMESTAMP}, ",
        "#{cancelNote,jdbcType=VARCHAR}, #{priceAmount,jdbcType=BIGINT}, ",
        "#{postage,jdbcType=BIGINT}, #{exchangeScore,jdbcType=INTEGER}, ",
        "#{exchangeCash,jdbcType=BIGINT}, #{couponNo,jdbcType=VARCHAR}, ",
        "#{couponPrice,jdbcType=BIGINT}, #{discountId,jdbcType=INTEGER}, ",
        "#{discountType,jdbcType=INTEGER}, #{discountDesc,jdbcType=VARCHAR}, ",
        "#{discountRule,jdbcType=VARCHAR}, #{discountPrice,jdbcType=BIGINT}, ",
        "#{payState,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, ",
        "#{payAccount,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, ",
        "#{payChannel,jdbcType=INTEGER}, #{payId,jdbcType=BIGINT}, ",
        "#{receiverProvinceId,jdbcType=INTEGER}, #{receiverProvinceName,jdbcType=VARCHAR}, ",
        "#{receiverCityId,jdbcType=INTEGER}, #{receiverCityName,jdbcType=VARCHAR}, ",
        "#{receiverAreaId,jdbcType=INTEGER}, #{receiverAreaName,jdbcType=VARCHAR}, ",
        "#{receiverAddress,jdbcType=VARCHAR}, #{receiverName,jdbcType=VARCHAR}, ",
        "#{receiverMobile,jdbcType=VARCHAR}, #{receiverAddressId,jdbcType=INTEGER}, ",
        "#{isReceive,jdbcType=INTEGER}, #{receiveTime,jdbcType=TIMESTAMP}, ",
        "#{deliverTime,jdbcType=TIMESTAMP}, #{deliverTimeLimit,jdbcType=INTEGER}, ",
        "#{remindDeliverCount,jdbcType=INTEGER}, #{isDelive,jdbcType=INTEGER}, ",
        "#{isDeliveTimeout,jdbcType=INTEGER}, #{expressId,jdbcType=INTEGER}, ",
        "#{expressName,jdbcType=VARCHAR}, #{expressNo,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, ",
        "#{modifierId,jdbcType=BIGINT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(ShopOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int insertSelective(ShopOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    List<ShopOrder> selectByExample(ShopOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    @Select({
        "select",
        "id, order_no, from_source, statu, user_id, user_name, user_mobile, user_comment, ",
        "shop_id, shop_name, shop_comment, is_overbuy, is_cancel, cancel_time, cancel_note, ",
        "price_amount, postage, exchange_score, exchange_cash, coupon_no, coupon_price, ",
        "discount_id, discount_type, discount_desc, discount_rule, discount_price, pay_state, ",
        "pay_time, pay_account, trade_no, pay_channel, pay_id, receiver_province_id, ",
        "receiver_province_name, receiver_city_id, receiver_city_name, receiver_area_id, ",
        "receiver_area_name, receiver_address, receiver_name, receiver_mobile, receiver_address_id, ",
        "is_receive, receive_time, deliver_time, deliver_time_limit, remind_deliver_count, ",
        "is_delive, is_delive_timeout, express_id, express_name, express_no, create_time, ",
        "modified_time, modifier_id",
        "from shop_order",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    ShopOrder selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int updateByExampleSelective(@Param("record") ShopOrder record, @Param("example") ShopOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int updateByExample(@Param("record") ShopOrder record, @Param("example") ShopOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    int updateByPrimaryKeySelective(ShopOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated Fri Feb 23 14:05:52 CST 2018
     */
    @Update({
        "update shop_order",
        "set order_no = #{orderNo,jdbcType=VARCHAR},",
          "from_source = #{fromSource,jdbcType=INTEGER},",
          "statu = #{statu,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=BIGINT},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_mobile = #{userMobile,jdbcType=VARCHAR},",
          "user_comment = #{userComment,jdbcType=VARCHAR},",
          "shop_id = #{shopId,jdbcType=BIGINT},",
          "shop_name = #{shopName,jdbcType=VARCHAR},",
          "shop_comment = #{shopComment,jdbcType=VARCHAR},",
          "is_overbuy = #{isOverbuy,jdbcType=INTEGER},",
          "is_cancel = #{isCancel,jdbcType=INTEGER},",
          "cancel_time = #{cancelTime,jdbcType=TIMESTAMP},",
          "cancel_note = #{cancelNote,jdbcType=VARCHAR},",
          "price_amount = #{priceAmount,jdbcType=BIGINT},",
          "postage = #{postage,jdbcType=BIGINT},",
          "exchange_score = #{exchangeScore,jdbcType=INTEGER},",
          "exchange_cash = #{exchangeCash,jdbcType=BIGINT},",
          "coupon_no = #{couponNo,jdbcType=VARCHAR},",
          "coupon_price = #{couponPrice,jdbcType=BIGINT},",
          "discount_id = #{discountId,jdbcType=INTEGER},",
          "discount_type = #{discountType,jdbcType=INTEGER},",
          "discount_desc = #{discountDesc,jdbcType=VARCHAR},",
          "discount_rule = #{discountRule,jdbcType=VARCHAR},",
          "discount_price = #{discountPrice,jdbcType=BIGINT},",
          "pay_state = #{payState,jdbcType=INTEGER},",
          "pay_time = #{payTime,jdbcType=TIMESTAMP},",
          "pay_account = #{payAccount,jdbcType=VARCHAR},",
          "trade_no = #{tradeNo,jdbcType=VARCHAR},",
          "pay_channel = #{payChannel,jdbcType=INTEGER},",
          "pay_id = #{payId,jdbcType=BIGINT},",
          "receiver_province_id = #{receiverProvinceId,jdbcType=INTEGER},",
          "receiver_province_name = #{receiverProvinceName,jdbcType=VARCHAR},",
          "receiver_city_id = #{receiverCityId,jdbcType=INTEGER},",
          "receiver_city_name = #{receiverCityName,jdbcType=VARCHAR},",
          "receiver_area_id = #{receiverAreaId,jdbcType=INTEGER},",
          "receiver_area_name = #{receiverAreaName,jdbcType=VARCHAR},",
          "receiver_address = #{receiverAddress,jdbcType=VARCHAR},",
          "receiver_name = #{receiverName,jdbcType=VARCHAR},",
          "receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},",
          "receiver_address_id = #{receiverAddressId,jdbcType=INTEGER},",
          "is_receive = #{isReceive,jdbcType=INTEGER},",
          "receive_time = #{receiveTime,jdbcType=TIMESTAMP},",
          "deliver_time = #{deliverTime,jdbcType=TIMESTAMP},",
          "deliver_time_limit = #{deliverTimeLimit,jdbcType=INTEGER},",
          "remind_deliver_count = #{remindDeliverCount,jdbcType=INTEGER},",
          "is_delive = #{isDelive,jdbcType=INTEGER},",
          "is_delive_timeout = #{isDeliveTimeout,jdbcType=INTEGER},",
          "express_id = #{expressId,jdbcType=INTEGER},",
          "express_name = #{expressName,jdbcType=VARCHAR},",
          "express_no = #{expressNo,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "modified_time = #{modifiedTime,jdbcType=TIMESTAMP},",
          "modifier_id = #{modifierId,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(ShopOrder record);
}