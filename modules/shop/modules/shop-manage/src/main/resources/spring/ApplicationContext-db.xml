<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!--
    <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{jdbcProps['jdbc.driver']}" />
        <property name="url" value="#{jdbcProps['jdbc.url']}" />
        <property name="username" value="#{jdbcProps['jdbc.username']}" />
        <property name="password" value="#{jdbcProps['jdbc.password']}" />
        <property name="maxActive" value="#{jdbcProps['dbcp.maxActive']}"/>
        <property name="maxIdle" value="#{jdbcProps['dbcp.maxIdle']}"/>
        <property name="minIdle" value="#{jdbcProps['dbcp.minIdle']}"/>

        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <property name="numTestsPerEvictionRun" value="3" />
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnReturn" value="true" />
        <property name="validationQuery" value="SELECT 1" />
    </bean>
    -->

    <bean id="dataSource"  class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close">
        <property name="driverClassName" value="#{jdbcProps['jdbc.driver']}" />
        <property name="url" value="#{jdbcProps['jdbc.url']}" />
        <property name="username" value="#{jdbcProps['jdbc.username']}" />
        <property name="password" value="#{jdbcProps['jdbc.password']}" />

        <property name="maxActive" value="#{jdbcProps['dbcp.maxActive']}"/>
        <property name="minIdle" value="#{jdbcProps['dbcp.minIdle']}"/>
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testOnBorrow" value="false" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnReturn" value="false" />
        <property name="validationQuery" value="SELECT 1" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,log4j" />
        <!-- 慢查询配置成5秒 -->
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />

        <!--连接池泄露检测-->
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.RuntimeException"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="interceptorPointCut" expression="execution(* com.shop.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCut"/>
    </aop:config>

    <!--
     classpath：只会在classes路径中查找找文件
     classpath*：不仅会到classes路径，还包括jar文件中(classes路径)进行查找。
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations">
            <array>
                <value>classpath*:mybatis/sqlmap/shop/*.xml</value>
                <value>classpath*:mybatis/sqlmap/shop/ext/*.xml</value>
            </array>
        </property>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="SIMPLE"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.shop.dao"/>
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
    </bean>

    <!--  druid具体的filter2个配置
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
    </bean>
        <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false" />
    </bean>
    -->

</beans>