-------------------------------------mongodb复制集----------------------------------
mongodb复制集就是一组mongod实例掌管同一个数据集，实例可以在不同的机器上面。
实例中包含一个主库，接受客户端所有的写入操作，其他都是副本实例，从主库上获得数据并保持同步。
主服务器包含了所有的改变操作（写）的日志。副本服务器集群包含有所有的主服务器数据，
当主服务器挂掉了，就会在副本服务器上重新选取一个成为主服务器。
有的复制集还有一个仲裁者，仲裁者不存储数据，只是负责通过心跳包来确认集群中集合的数量，
并在主服务器选举的时候作为仲裁决定结果。
mongodb复制集的基本架构:
a,三个存储数据的成员的复制集
      一个主库,两个从库组成，主库宕机时，这两个从库都可以被选为主库。
      当主库宕机后,两个从库都会进行竞选，其中一个变为主库，当原主库恢复后，作为从库加入当前的复制集群即可。
b,三个成员的复制集中,存在arbiter节点
      在三个成员的复制集中，一个主库,一个从库，可以在选举中成为主库，一个aribiter节点，在选举中，只进行投票，不能成为主库
mongodb复制集通过replSetInitiate命令（或mongo shell的rs.initiate()）进行初始化，
初始化后各个成员间开始发送心跳消息，并发起Priamry选举操作，
获得大多数成员投票支持的节点，会成为Primary，其余节点成为Secondary。

mongodb复制集中成员
Primary     主库,接受客户端所有的写入操作,包含了所有的改变操作（写）的日志。
Secondary   从库,参与Primary选举（自身也可能会被选为Primary），
            并从Primary同步最新写入的数据，以保证与Primary存储相同的数据。
Arbiter     Arbiter节点只参与投票，不能被选为Primary，并且不从Primary同步数据。
            比如部署了一个2个节点的复制集，1个Primary，1个Secondary，
            任意节点宕机，复制集将不能提供服务了（无法选出Primary），
            这时可以给复制集添加一个Arbiter节点，即使有节点宕机，仍能选出Primary。
            当复制集成员为偶数时，最好加入一个Arbiter节点，以提升复制集可用性。
Priority0   Priority0节点的选举优先级为0，不会被选举为Primary
            比如跨机房A、B部署了一个复制集，并且想指定Primary必须在A机房，
            这时可以将B机房的复制集成员Priority设置为0，这样Primary就一定会是A机房的成员。
            最好将大多数节点部署在A机房，否则网络分区时可能无法选出Primary
Vote0       Mongodb 3.0里，复制集成员最多50个，参与Primary选举投票的成员最多7个，
            其他成员（Vote0）的vote属性必须设置为0，即不参与投票。
------------------------------------------------------------------------------------