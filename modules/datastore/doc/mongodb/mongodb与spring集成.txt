mongodb的java驱动包版本以及与spring整合的jar包版本匹配
mongodb java driver 2.X版本与spirng框架版本4.X的，使用的spring-data-mongodb是1.X的版本
<!--mongodb-spring整合-->
<dependency>
    <groupId>org.mongodb</groupId>
    <artifactId>mongo-java-driver</artifactId>
    <version>2.14.3</version>
</dependency>
<dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-mongodb</artifactId>
    <version>1.10.7.RELEASE</version>
</dependency>

<?xml version="1.0" encoding="UTF-8"?>
<beans>
     <mongo:mongo replica-set="${mongo.hostport}">
         <mongo:options connections-per-host="${mongo.connectionsPerHost}"
                        threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                        connect-timeout="${mongo.connectTimeout}"
                        max-wait-time="${mongo.maxWaitTime}"
                        auto-connect-retry="true"
                        socket-keep-alive="true"
                        socket-timeout="${mongo.socketTimeout}"
                        slave-ok="true"
                        write-number="1"
                        write-timeout="0"
                        write-fsync="true"  />
     </mongo:mongo>
     <mongo:db-factory username="root" password="root" dbname="admin" mongo-ref="mongo"/>
     <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
             <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
     </bean>
</beans>

mongodb java driver 3.X版本与spirng框架版本5.X的，使用的spring-data-mongodb是2.X的版本
<!--mongodb-spring整合-->
<dependency>
    <groupId>org.mongodb</groupId>
    <artifactId>mongo-java-driver</artifactId>
    <version>3.5.0</version>
</dependency>
<dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-mongodb</artifactId>
    <version>2.0.1.RELEASE</version>
</dependency>
<beans>
    <mongo:mongo-client id="mongoClient" replica-set="${mongo.hostport}"        ###复制集或单个mongodb节点
                        credentials="${mongo.username}:${mongo.password}@${mongo.authenticationDbname}">
        <mongo:client-options connections-per-host="${mongo.connectionsPerHost}"
                              threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                              connect-timeout="${mongo.connectTimeout}"
                              max-wait-time="${mongo.maxWaitTime}"
                              socket-timeout="${mongo.socketTimeout}"
                              slave-ok="true"                            ###副节点可读
                              read-preference="SECONDARY_PREFERRED"      ###实现读写分离，读请求优先到Secondary节点
                              />
    </mongo:mongo-client>
    <mongo:db-factory dbname="${mongo.databaseName}" mongo-ref="mongoClient"/>
    <mongo:template db-factory-ref="mongoDbFactory"/>
</beans>

spring连接mongodb复制集的字符串格式：
mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]
    mongodb:// 前缀，代表这是一个Connection String
    username:password@ 如果启用了用户认证，需要指定用户密码
    hostX:portX 复制集成员的ip:port信息，多个成员以逗号分割
    /database 认证时，用户帐号所属的数据库
    ?options 指定额外的连接选项
在options里添加readPreference=secondaryPreferred可以实现读写分离，读请求优先到Secondary节点。
mongodb复制集对读写分离的支持是通过Read Preferences特性进行支持的，它支持五种 read preference模式：
    1.primary：主节点，默认模式，读操作只在主节点，如果主节点不可用，报错或者抛出异常。
    2.primaryPreferred：首选主节点，大多情况下读操作在主节点，如果主节点不可用，如故障转移，读操作在从节点。
    3.secondary：从节点，读操作只在从节点，如果从节点不可用，报错或者抛出异常。
    4.secondaryPreferred：首选从节点，大多情况下读操作在从节点，特殊情况（如单主节点架构）读操作在主节点。
    5.nearest：最邻近节点，读操作在最邻近的成员，可能是主节点或者从节点。

