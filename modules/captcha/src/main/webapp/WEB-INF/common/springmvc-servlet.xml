<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

<!-- Forwards requests to the "/" resource to the "welcome" view -->
    <mvc:view-controller path="/index" view-name="/index"/>
    <mvc:view-controller path="/" view-name="/index"/>
    <mvc:resources mapping="/common/**" location="/common/" />

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <!-- 多个包名用逗号隔开, 但不能有空格 -->
    <context:component-scan base-package="com.captcha.controller"/>

    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="locale"/>
        </bean>
    </mvc:interceptors>

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale">
            <value>zh</value>
        </property>
        <property name="cookieMaxAge" value="100000"/>
    </bean>


    <!-- order值越小, 优先级越高 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="order" value="1"/>
    </bean>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
            </list>
        </property>

    </bean>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="3">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="contentType" value="text/html" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8">
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean id="freeMarkerViewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="allowRequestOverride" value="true" />
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="requestContextAttribute" value="rc"/>
        <property name="order" value="2"/>
    </bean>

    <!--<bean id="textHtmlMediaType" class="org.springframework.http.MediaType">-->
        <!--<constructor-arg type="java.lang.String" value="text/html"/>-->
    <!--</bean>-->

    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <!-- 设置为true以忽略对Accept Header的支持-->
        <property name="ignoreAcceptHeader" value="true"/>

        <!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
        <property name="defaultContentType" value="text/html"/>
        <!--<property name="defaultContentType" value="text/html"/>        -->
        <!--<property name="defaultContentType" ref="textHtmlMediaType" />-->

        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="mediaTypes">
            <map>
                <entry key="wml" value="text/vnd.wap.wml;charset=UTF-8"/>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <!--<entry key="xml" value="application/xml"/>-->
            </map>
        </property>

        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="false"/>

        <property name="viewResolvers">
            <list>
                <ref bean="defaultViewResolver"/>
                <ref bean="freeMarkerViewResolver"/>
            </list>
        </property>


        <property name="defaultViews">
            <list>
                <!-- for application/json -->
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>

                <!-- for application/xml -->
                <!--<bean id="xmlView" class="org.springframework.web.servlet.view.xml.MarshallingView">-->
                    <!--<property name="marshaller">-->
                        <!--<bean class="org.springframework.oxm.xstream.XStreamMarshaller">-->
                            <!--<property name="autodetectAnnotations" value="true"/>-->
                        <!--</bean>-->
                    <!--</property>-->
                    <!--<property name="modelKey" value="xmlKey"/>-->
                <!--</bean>-->
            </list>
        </property>
    </bean>

</beans>
