vue.js是一套构建用户界面的渐进式框架,采用自底向上增量开发的设计。是MVVM模式的前端框架。
vue两大核心思想：组件化和数据驱动
组件化就是将一个整体合理拆分为一个一个小块（组件），组件可重复使用。
数据驱动释放了对DOM的操作，让DOM随着数据的变化自然而然的变化，不必过多的关注DOM，只需要将数据组织好即可。
vue-cli是快速构建vue单页应用的脚手架。
npm install vue                           ###安装vue
npm install --global vue-cli              ###使用npm全局安装vue-cli
vue init webpack testweb                  ###用vue创建testweb项目
cd testweb
npm install  或 cnpm install              ###下载安装项目依赖
npm run dev                               ###启动项目
npm run build                             ###项目打包，项目根目录下生成的dist文件夹就是打包好的成品页面
注:在进行页面调试时，用Chrome浏览器，可使用vue-tool扩展程序。

项目结构:
    testweb
    | - build                             ###运行文件夹,dev/prod运行时需要用到的相关文件，含webpack配置
    | - config                            ###配置文件夹,比如dev/prod两种对应的不同接口等设置
    | - dist                              ###打包生成的部署文件夹
    | - node_modules                      ###依赖的模块
    | - src                               ###项目代码
      | - **assets**                    ###自身项目资源文件夹
      | - **components**                ###页面组件文件夹
      | - **router**                    ###路由文件夹
      | - *App.vue*                     ###vue主文件
      | - *main.js*                     ###入口文件，webpack配置的entrance
                                             main.js文件，声明了一个Vue根实例，是说明用APP组件去渲染替换#app的这个DOM元素
    | - static                            ###第三方的资源文件夹
    | - .babelrc                          ###转码规则配置
    | - .editorconfig                     ###代码规范配置
    | - .eslintignore                     ###eslint检查忽略配置
    | - .eslintrc.js                      ###eslint配置文件
    | - .gitignore                        ###git忽略配置
    | - .postcssrc.js                     ###postcss的load的config，文件里有对应的github地址
    | - index.html                        ###html主页面
    | - package.json
    | - README.md
-----------------------------------------------------------------------------------------