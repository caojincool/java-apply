---------------------------------------------------spring boot-------------------------------------------
springboot内部提供了很多自动化配置的类，这些类会判断classpath中是否存在自己需要的那个类，如果存在则会自动配置相关的配置，否则就不会自动配置。
如果项目需要使用一些框架，只需要加入依赖即可，这些依赖内部是没有代码的，只是一些对应框架需要的lib，
有了这些lib就会触发自动化配置，于是就能使用框架了。

spring boot的打包，使用spring-boot-maven-plugin插件，
直接运行maven生命周期的package就能产生一个整合依赖包的独立的jar包。

spring boot启动后数据加载或初始化之--CommandLineRunner
实际应用中，在项目服务启动的时候可能会去加载一些数据或做一些事情来初始化。
为了解决这样的问题，Spring boot提供了一个方式来实现项目的初始化，通过实现接口 CommandLineRunner 来实现业务初始化。
@Component
@Order(value=2)
public class StartupRunner2 implements CommandLineRunner {

   @Override
    public void run(String... args) throws Exception {
        System.out.println("////////////////////执行数据加载开始////////////////////");
    }
}

springboot配置类中引入springContext.xml这样的xml配置文件
@Configuration
@ImportResource(locations = {"classpath:ApplicationContext.xml"})
public class XxConfig {
}

---------------------------------------------------------------------------------------------------------