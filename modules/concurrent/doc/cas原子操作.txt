--------------------------------cas原子操作-----------------------------------
CAS指cpu支持的一种对内存中的共享数据进行操作的一种特殊指令。这个指令会对内存中的共享数据做原子的读写操作。
首先，CPU会将内存中将要被更改的数据与期望的值做比较。然后，当这两个值相等时，CPU才会将内存中的数值替换为新的值。否则便不做操作。最后，CPU会将旧的数值返回。
这一系列的操作是原子的。是Java 5并发机制优于原有锁机制的根本。
简单来说，CAS的含义是"我认为原有的值应该是什么，如果是，则将原有的值更新为新值，否则不做修改，并告诉我原来的值是多少"。
CAS的操作包括3个操作数：内存值V，预期原值A，新值B。
当且仅当预期原值A和内存值V相同时，将内存值V修改为B，否则返回V。因此可以理解CAS的主要就是两个步骤：冲突检测和数据更新。
这是一种乐观锁的思路，它相信在它修改之前，没有其它线程去修改它；而Synchronized是一种悲观锁，它认为在它修改之前，一定会有其它线程去修改它，悲观锁效率很低。
incrementAndGet方法实现:
public final int incrementAndGet() {
    for (;;) {
        int current = get();// 获取当前值
        int next = current + 1;// 设置更新值
        if (compareAndSet(current, next))
        {    return next;}
    }
}
循环内，获取当前值并设置更新值，调用compareAndSet进行CAS操作，如果成功就返回更新至，否则重试到成功为止。
-----------------------------------------------------------------------------
