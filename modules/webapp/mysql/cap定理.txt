---------------------------------cap定理-----------------------------------
cap定理指在设计分布式系统时，一致性（Consistent）、可用性（Availability）、可靠性（分区容忍性Partition Tolerance）三个属性不可能同时满足，该定理也叫做布鲁尔定理。
cap定理明确了分布式系统的局限性，一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）和分区容错性（Partition tolerance）这三项中的两项。
Consistency 一致性
     一致性指"all nodes see the same data at the same time"，更新成功并返回客户端完成后，所有节点在同一时间的数据完全一致。
     从客户端来看，一致性主要指的是多并发访问时更新过的数据如何获取的问题。从服务端来看，则是更新如何复制分布到整个系统，以保证数据最终一致。
     一致性是因为有并发读写才有的问题，对于关系型数据库，更新过的数据能被后续的访问都能看到，这是强一致性。
     如果能容忍后续的部分或者全部访问不到，则是弱一致性。如果经过一段时间后要求能访问到更新后的数据，则是最终一致性。
Availability 可用性
     可用性指"Reads and writes always succeed"，即服务一直可用，而且是正常响应时间。
     对于一个可用性的分布式系统，每一个非故障的节点必须对每一个请求作出响应。可用性通常情况下可用性和分布式数据冗余，负载均衡等有着很大的关联。
Partition Tolerance分区容错性
    分区容错性指"the system continues to operate despite arbitrary message loss or failure of part of the system"，即分布式系统在遇到某节点或网络分区故障的时候，
    仍然能够对外提供满足一致性和可用性的服务。比如分布式系统中有某一个或者几个机器宕掉了，其他剩下的机器还能够正常运转满足系统需求，或者是机器之间有网络异常，
    将分布式系统分隔为独立的几个部分，各个部分还能维持分布式系统的运作，这样就具有好的分区容错性。

关系数据库库中事务的ACID
原子性(Atomicity）
    事务中的所有操作，要么全部完成，要么全部不完成。
一致性（Consistency）
    在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。
隔离性（Isolation）
    隔离状态执行事务，一个事务不能影响另一个事务。
持久性（Durability）
    在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中。
---------------------------------------------------------------------------